[
    {
        "page": 1,
        "content": "PRAKTIKUM\nAnalisis dan Perancangan Sistem\nTeknik Informatika Kelas G\nNama Mahasiswa\nMuhammad Rizqon Maulana (215150201111022)\nDosen:\nDenny Sagita Rusdianto, S.Kom., M.Kom.\nProgram Studi Teknik Informatika\nJurusan Teknik Informatika\nUniversitas Brawijaya\n2023"
    },
    {
        "page": 2,
        "content": "Analisis dan Perancangan Sistem M Rizqon Maulana\nSOFTWARE DEVELOPMENT LIFE CYCLE\n1. Sebutkan dan gambarkan 5 jenis SDLC yang anda ketahui.\na) Waterfall Model\nModel SDLC ini adalah salah satu model tertua dan tersingkat dalam penerapannya.\nDalam sistem ini, setiap tahap harus diselesaikan terlebih dahulu sebelum memulai tahap\nberikutnya. Setiap fase memiliki rencana kecil dan menurun ke fase berikutnya. Maka dari\nitu, fase ini dikatakan waterfall atau air terjun karena tiap fase memiliki ‘turunan’ kecil\nlainnya.\nb) Iterative Model\nDalam model ini, pengembangan perangkat lunak dilakukan secara bertahap, dimulai\ndari tahap perencanaan, desain, implementasi, dan pengujian, kemudian dilakukan evaluasi"
    },
    {
        "page": 3,
        "content": "Analisis dan Perancangan Sistem M Rizqon Maulana\nhasil dari tahap-tahap tersebut, dan proses pengembangan diteruskan kembali dengan\nperbaikan dan pengembangan tambahan yang diperlukan. Model ini memungkinkan\npengembang perangkat lunak untuk lebih fleksibel dan adaptif terhadap perubahan\nkebutuhan dan spesifikasi pengguna, serta meminimalkan risiko kegagalan proyek\npengembangan perangkat lunak.\nc) Agile Model\nSuatu pendekatan dalam pengembangan perangkat lunak yang menekankan pada\nkolaborasi tim, pengiriman produk secara bertahap, dan responsif terhadap perubahan\npermintaan pelanggan. Dalam Agile Model, pengembangan produk dilakukan secara\niteratif dan inkremental dengan siklus pengembangan yang terdiri dari perencanaan,\nanalisis, desain, pengkodean, pengujian, dan evaluasi. Dalam Agile Model, pelanggan dan\ntim pengembang bekerja sama untuk menentukan kebutuhan dan prioritas, sehingga dapat\nmemberikan nilai tambah pada setiap iterasi pengembangan produk. Model ini\nmemungkinkan pengembang untuk lebih responsif terhadap perubahan kebutuhan dan\nkeinginan pelanggan serta memaksimalkan nilai bisnis dan kepuasan pelanggan.\nd) V-Model"
    },
    {
        "page": 4,
        "content": "Analisis dan Perancangan Sistem M Rizqon Maulana\nSuatu model pengembangan perangkat lunak yang merupakan perluasan dari model\nwaterfall. Model ini terdiri dari dua belahan, yaitu pengembangan dan pengujian. Pada\ntahap pengembangan, setiap tahap memiliki pasangan pengujian yang sesuai. Setiap tahap\npengujian mencakup pengujian unit, integrasi, dan pengujian sistem. Pengujian dilakukan\nsecara paralel dengan pengembangan, dan hasil pengujian menjadi acuan dalam\nmengevaluasi dan memastikan kualitas perangkat lunak. Hal ini membuat model ini sangat\nberorientasi pada kualitas, karena setiap tahap pengembangan memiliki tahap pengujian\nyang selaras dengannya. Model ini sangat cocok untuk proyek besar dengan jadwal yang\nketat karena memberikan kualitas yang lebih baik dan meminimalkan kesalahan pada tahap\npengujian.\ne) Incremental Model\nsuatu model pengembangan perangkat lunak dimana pengembangan dilakukan secara\nbertahap dan terus-menerus, dimulai dari pengembangan modul atau bagian-bagian kecil\ndari perangkat lunak yang kemudian diintegrasikan satu sama lain hingga menjadi satu\nproduk yang lengkap. Setiap tahap pengembangan atau iterasi biasanya menghasilkan\nproduk yang siap untuk diuji coba dan digunakan, sehingga memberikan keuntungan untuk\nmengevaluasi progres dan menerima masukan dari pengguna. Model ini sangat cocok\nuntuk proyek yang kompleks dan tidak jelas, karena memungkinkan perubahan dan\npenyesuaian kebutuhan selama pengembangan berlangsung."
    },
    {
        "page": 5,
        "content": "Analisis dan Perancangan Sistem M Rizqon Maulana\n2. Tuliskan kelebihan dan kelemahan pada masing-masing SDLC.\na) Waterfall Model\nKelebihan Waterfall Model:\n▪ Mudah Diikuti: Waterfall model merupakan salah satu model SDLC yang mudah\nuntuk diikuti karena mempunyai alur yang linear dan sekuensial.\n▪ Menghasilkan Perangkat Lunak yang Dapat Diprediksi: Waterfall model\nmenghasilkan perangkat lunak yang dapat diprediksi karena setiap tahap harus\ndiselesaikan sebelum memulai tahap berikutnya.\n▪ Mudah Dilacak: Karena setiap tahap memiliki output yang jelas dan harus\ndiselesaikan sebelum memulai tahap berikutnya, maka proyek pengembangan\nperangkat lunak dengan menggunakan waterfall model mudah dilacak.\nKekurangan Waterfall Model:\n▪ Kurang Fleksibel: Waterfall model kurang cocok untuk proyek perangkat lunak\nyang kompleks dan membutuhkan fleksibilitas dan adaptasi yang tinggi.\n▪ Kesulitan dalam Menangani Perubahan Kebutuhan: Karena setiap tahap harus\ndiselesaikan sebelum memulai tahap berikutnya, maka waterfall model kesulitan\ndalam menangani perubahan kebutuhan atau perubahan spesifikasi.\n▪ Keterlambatan Identifikasi Kesalahan: Karena pengujian dilakukan setelah tahap\nimplementasi selesai, maka identifikasi kesalahan atau bug terlambat ditemukan dan\nmembutuhkan biaya yang lebih tinggi untuk memperbaikinya.\nb) Iterative Model\nKelebihan Iterative Model:\n▪ Fleksibel dan Adaptif: Iterative Model memungkinkan pengembang perangkat\nlunak untuk lebih fleksibel dan adaptif terhadap perubahan kebutuhan dan\nspesifikasi pengguna, karena setiap tahap dilakukan secara bertahap dengan\nevaluasi dan perbaikan di antara setiap tahap.\n▪ Identifikasi Kesalahan Dini: Model ini memungkinkan pengembang untuk\nmengidentifikasi kesalahan atau bug lebih awal, sehingga perbaikan dapat\ndilakukan sebelum tahap pengujian.\n▪ Meningkatkan Kepuasan Pengguna: Karena pengembang dapat melakukan\nperbaikan dan pengembangan tambahan pada setiap iterasi, maka kemungkinan\nhasil akhir perangkat lunak lebih sesuai dengan kebutuhan dan harapan pengguna.\nKekurangan Iterative Model:\n▪ Memerlukan Biaya Lebih: Karena model ini melibatkan banyak iterasi dan evaluasi,\nmaka pengembangan perangkat lunak menggunakan Iterative Model dapat\nmemerlukan biaya yang lebih tinggi.\n▪ Memerlukan Waktu Lebih Lama: Karena proses iterasi dan evaluasi dilakukan\nsecara berulang-ulang, maka pengembangan perangkat lunak menggunakan\nIterative Model dapat memerlukan waktu yang lebih lama dibandingkan dengan\nmodel SDLC lainnya.\n▪ Memerlukan Tim yang Terampil: Model ini memerlukan tim yang terampil dan"
    },
    {
        "page": 6,
        "content": "Analisis dan Perancangan Sistem M Rizqon Maulana\nberpengalaman untuk dapat melakukan evaluasi dan perbaikan secara efektif pada\nsetiap iterasi.\nc) Agile Model\nKelebihan Agile Model:\n▪ Responsif terhadap perubahan: Agile Model memungkinkan pengembang untuk\nlebih responsif terhadap perubahan kebutuhan dan keinginan pelanggan, sehingga\nmemungkinkan produk lebih sesuai dengan kebutuhan pelanggan dan nilai bisnis\nyang diharapkan.\n▪ Kualitas Produk yang lebih baik: Dalam Agile Model, pengujian dan evaluasi\nproduk dilakukan secara terus-menerus pada setiap iterasi, sehingga memungkinkan\npengembang untuk mengidentifikasi masalah lebih awal dan memperbaikinya\nsebelum produk dirilis, sehingga meningkatkan kualitas produk.\n▪ Kolaborasi Tim: Model ini mendorong kolaborasi antara pelanggan dan tim\npengembang, sehingga memungkinkan pengembang untuk memahami kebutuhan\npelanggan dan memberikan nilai tambah pada setiap iterasi pengembangan produk.\nKekurangan Agile Model:\n▪ Memerlukan Tim yang Terampil: Agile Model memerlukan tim yang terampil dan\nberpengalaman, karena pengembangan produk dilakukan secara cepat dan efisien,\nsehingga memerlukan kemampuan yang tinggi dalam pengembangan perangkat\nlunak.\n▪ Memerlukan Komunikasi yang Efektif: Model ini memerlukan komunikasi yang\nefektif dan transparan antara pelanggan dan tim pengembang, karena\npengembangan produk dilakukan secara berulang-ulang dalam waktu yang relatif\nsingkat.\n▪ Tidak Cocok untuk Proyek Besar: Model ini lebih cocok untuk proyek kecil hingga\nmenengah, karena jika digunakan untuk proyek besar, pengembangan produk bisa\nmenjadi tidak terstruktur dan sulit dikelola.\nd) V-Model\nKelebihan V-Model:\n▪ Fokus pada Kualitas: V-Model sangat fokus pada kualitas karena setiap tahap\npengembangan memiliki tahap pengujian yang sesuai, dan hasil pengujian menjadi\nacuan dalam mengevaluasi dan memastikan kualitas perangkat lunak.\n▪ Meminimalkan Kesalahan: Dalam V-Model, pengujian dilakukan secara paralel\ndengan pengembangan, sehingga kesalahan bisa dideteksi lebih awal dan\ndiminimalkan sebelum produk dirilis.\n▪ Mudah Dipahami: V-Model relatif mudah dipahami dan diterapkan, sehingga cocok\nuntuk proyek yang memiliki jadwal yang ketat.\nKekurangan V-Model:\n▪ Tidak Fleksibel: V-Model kurang fleksibel dalam menghadapi perubahan\nkebutuhan, karena pengujian dilakukan secara berurutan dan tergantung pada tahap"
    },
    {
        "page": 7,
        "content": "Analisis dan Perancangan Sistem M Rizqon Maulana\npengembangan sebelumnya.\n▪ Biaya yang Mahal: V-Model memerlukan biaya yang mahal untuk melakukan\npengujian yang intensif dan melibatkan banyak sumber daya.\n▪ Tidak Cocok untuk Proyek Kecil: V-Model lebih cocok untuk proyek besar yang\nmemiliki jadwal yang ketat, sehingga kurang cocok untuk proyek kecil yang\nmembutuhkan fleksibilitas dalam pengembangan.\ne) Incremental Model\nKelebihan Incremental Model:\n▪ Fleksibel: Incremental Model sangat fleksibel dalam menghadapi perubahan\nkebutuhan, karena pengembangan dilakukan secara bertahap dan terus-menerus.\nHal ini memungkinkan tim pengembang untuk menyesuaikan kebutuhan dan\nmengubah arah pengembangan ketika diperlukan.\n▪ Meminimalkan Resiko: Dalam Incremental Model, setiap tahap pengembangan\nmenghasilkan produk yang siap digunakan. Ini memungkinkan pengguna untuk\nmelakukan pengujian dan memberikan umpan balik, sehingga meminimalkan risiko\nkesalahan pada tahap pengembangan berikutnya.\n▪ Mempercepat Time-to-Market: Incremental Model memungkinkan produk yang\nsiap digunakan untuk dirilis pada setiap tahap pengembangan, sehingga\nmempercepat waktu pengiriman dan pemasaran.\nKekurangan Incremental Model:\n▪ Memerlukan Rencana yang Baik: Incremental Model memerlukan perencanaan\nyang baik untuk menghindari potensi kegagalan dan kelemahan pada tahap\npengembangan. Setiap tahap pengembangan harus diperencanaan dengan baik agar\ndapat menghasilkan produk yang dapat digunakan dengan baik.\n▪ Kompleksitas: Incremental Model dapat menjadi kompleks karena terdiri dari\nbeberapa tahap pengembangan, yang masing-masing memerlukan pengujian dan\nvalidasi. Ini memerlukan pengelolaan proyek yang baik dan disiplin yang kuat\nuntuk menghindari kegagalan.\n▪ Biaya yang Mahal: Incremental Model memerlukan biaya yang mahal karena\npengembangan dilakukan secara bertahap dan terus-menerus, dan memerlukan\npengujian dan validasi setiap tahap pengembangan."
    }
]